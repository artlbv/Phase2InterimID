import FWCore.ParameterSet.Config as cms

hgcalPhotonMVA = cms.EDProducer("HGCalPhotonMVAProducer",
    photons = cms.InputTag("photonsFromMultiCl"),
    rhoSrc = cms.InputTag("fixedGridRhoFastjetAll"),
    electronsFromMultiCl = cms.InputTag("ecalDrivenGsfElectronsFromMultiCl"),
    usePAT = cms.bool(False),
    gedGsfElectrons = cms.InputTag("gedGsfElectrons"),
    conversions = cms.InputTag("conversions"),
    beamspot = cms.InputTag("offlineBeamSpot"),
    externalVariables = cms.PSet(
      sigmaUU = cms.InputTag("hgcPhotonID:sigmaUU"),
      sigmaVV = cms.InputTag("hgcPhotonID:sigmaVV"),
      e4oEtot = cms.InputTag("hgcPhotonID:e4oEtot"),
      layerEfrac10 = cms.InputTag("hgcPhotonID:layerEfrac10"),
      layerEfrac90 = cms.InputTag("hgcPhotonID:layerEfrac90"),
      seedEnergyFH = cms.InputTag("hgcPhotonID:seedEnergyFH"),
      seedEnergyEE = cms.InputTag("hgcPhotonID:seedEnergyEE"),
      measuredDepth = cms.InputTag("hgcPhotonID:measuredDepth"),
      depthCompatibility = cms.InputTag("hgcPhotonID:depthCompatibility"),
      caloIsoRing0 = cms.InputTag("hgcPhotonID:caloIsoRing0"),
      caloIsoRing1 = cms.InputTag("hgcPhotonID:caloIsoRing1"),
      caloIsoRing2 = cms.InputTag("hgcPhotonID:caloIsoRing2"),
      caloIsoRing3 = cms.InputTag("hgcPhotonID:caloIsoRing3"),
      caloIsoRing4 = cms.InputTag("hgcPhotonID:caloIsoRing4"),
      scRawEnergy = cms.InputTag("hgcPhotonID:scRawEnergy"),
    ),
    barrelTrainingFile = cms.FileInPath("RecoEgamma/Phase2InterimID/data/barrelV4_BDT.weights.xml"),
    endcapTrainingFile = cms.FileInPath("RecoEgamma/Phase2InterimID/data/endcapV4_BDT.weights.xml"),
)
